211210 ~ 2112

--variable--

What is difference between const and let?

const: constant(상수), 不變
let: create new variable

ex)
let myName: "Kang";

~~~~~~~~~~~~

myName: "Kim";
-> 이런 식으로 let으로 선언된 variable 나중에 필요에 따라 변경 가능 (but const는 不可)

-variable 안에 들어갈 수 있는 변수 종류-
string: "";
number
boolean: true/false *null: 無


-Arrays- []
값들의 그룹화

-Object- {}
변수 아래의 객체들에 값을 할당

ex)
const player = {
  name: "kang",
  points: 10,
  fat: true,
};

console.log(player);
=   name: "kang",
  points: 10,
  fat: true,
console.log(player.name);
= kang

~~~~~~~~~~~~~~~~~ 변수 할당값 update 可
console.log(player); = ~~~~~fat: true
player.fat = false;
console.log(player); = ~~~~~fat: false
~~~~~~~~~~~~~~~~~
player.lastName = "potato"; = ~~~~~lastName: potato
~~~~~~~~~~~~~~~~~
player.points = player.points + 15; = ~~~~~points: 25


--function--

function sayHello(nameOfPerson) {
  console.log(nameOfPerson);
}

sayHello("kim");
sayHello("lee");
sayHello("park");

=
kim
lee
park


-()은 function 실행 버튼이라고 생각.
sayHello();: send argument
nameOfPerson: receive argument

ex) calculator
const calculator = {
  plus: function (a, b) {
    console.log(a + b);
  },
  minus: function (a, b) {
    console.log(a - b);
  },
  multi: function (a, b) {
    console.log(a * b);
  },
  div: function (a, b) {
    console.log(a / b);
  },
  sq: function (a, b) {
    console.log(a ** b);
  },
};

calculator.plus(10, 5);
calculator.minus(10, 5);
calculator.multi(6, 9);
calculator.div(54, 6);
calculator.sq(2, 2);

* console: console창에 값 반환
alert: 브라우저창에 값 반환
return: 실질적인 값 반환. return 하는 순간 function 종료. 뒤에 오는 함수 작동 X


--conditionals--

-if/else-
ex)
const age = parseInt(prompt("How old are you?"));

if (isNaN(age)) {
    // true
  console.log("Please write a number");
} else {
    // fals
  console.log("Thank you for writing for your age");
}


- condition값은 반드시 boolean(T or F)
- parseInt(): string(숫자) -> number 변환


--Events--
preventDefault(): 요소가 갖고 있는 기본기능을 동작 못 하게 막음 ex) html의 submit 시 새로고침 기능

 `Hello ${username}`  : string + variable


--setInterval vs setTimeout--
setInterval: 설정한 시간 간격마다 함수 반복 실행
setTimeout: 설정한 시간 후 함수 1회 실행

padStart
padEnd  --> string의 앞뒤로 입력한 자리수만큼 padding 넣어줌


--Math--
round: 반올림
ceil: 올림
floor: 내림

stringify vs parse
forEach


























